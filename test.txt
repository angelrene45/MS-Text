# Short Technical Interview Questions and Answers (English)

## 1. FastAPI / Flask

**Q1:** What is a key difference between FastAPI and Flask?
**A:**  
- **FastAPI** focuses on speed and built-in data validation (through Pydantic), automatically generating OpenAPI docs.  
- **Flask** is more minimal and flexible, requiring additional extensions for features like authentication or data validation.

**Q2:** How would you handle data validation in FastAPI?
**A:**  
- Use **Pydantic models** to define the expected data structure.  
- FastAPI automatically validates incoming requests and returns an HTTP 422 error on invalid data.

---

## 2. Multithreading / Multiprocessing

**Q1:** When would you use multithreading in Python?
**A:**  
- For **I/O-bound** tasks (e.g., network requests, file operations).  
- The Global Interpreter Lock (GIL) is less problematic when threads are mostly waiting for I/O.

**Q2:** When would you use multiprocessing?
**A:**  
- For **CPU-bound** tasks (e.g., heavy computations, large in-memory data processing).  
- Each process has its own Python interpreter, avoiding the GIL and enabling true parallelism for CPU-intensive work.

---

## 3. Pandas

**Q1:** How do you read a CSV file into a DataFrame using Pandas?
**A:**  
```python
import pandas as pd

df = pd.read_csv('file.csv')
