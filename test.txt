import subprocess
import os

def check_requirements(venv_path, requirements_file="requirements.txt"):
    # Define la ruta del ejecutable de pip-compile dentro del entorno virtual
    pip_compile_path = os.path.join(venv_path, "bin", "pip-compile")
    
    # Verifica si pip-compile est√° instalado en el entorno virtual
    if not os.path.isfile(pip_compile_path):
        print(f"'pip-compile' is not installed in the virtual environment at {venv_path}.")
        return

    print(f"\nChecking dependencies in the virtual environment at {venv_path} using {requirements_file}...")

    try:
        # Ejecuta pip-compile en modo dry-run dentro del entorno virtual
        result = subprocess.run(
            [pip_compile_path, "--dry-run", requirements_file],
            check=True,
            text=True,
            capture_output=True
        )
        print("Dependencies are consistent!")
        print(result.stdout)  # Muestra la salida de pip-compile, si es necesario
    except subprocess.CalledProcessError as e:
        print("There was an issue with dependencies:")
        print(e.stderr)  # Muestra cualquier error en la salida

# Ejemplo de uso: especifica la ruta del entorno virtual y el archivo de requirements
venv_path = "/path/to/your/venv"
check_requirements(venv_path, "requirements.txt")
